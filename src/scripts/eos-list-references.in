#!/usr/bin/env python3

# Copyright (c) 2016, 2018 Danny van Dyk
#
# This file is part of the EOS project. EOS is free software;
# you can redistribute it and/or modify it under the terms of the GNU General
# Public License version 2, as published by the Free Software Foundation.
#
# EOS is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program; if not, write to the Free Software Foundation, Inc., 59 Temple
# Place, Suite 330, Boston, MA  02111-1307  USA

import argparse
import collections
import yaml
import sys

def isstring(x):
    return isinstance(x, str)

def collabify(x):
    if not isstring(x) and isinstance(x, collections.Iterable):
        result = '('
        result += ' collaboration, '.join(x)
        result += ' collaboration)'
        return result
    else:
        return '({} collaboration)'.format(x)

def listify(x):
    if not isstring(x) and isinstance(x, collections.Iterable):
        return ", ".join(x)
    else:
        return x

def main():
    parser = argparse.ArgumentParser(description='List references used in EOS')
    parser.add_argument('refs', metavar='REFS', type=str, nargs='*', help='Key for a reference')

    args = parser.parse_args()

    with open('@PKGDATADIR@/references.yaml') as data_file:
        refs = yaml.load(data_file)

    if args.refs:
        keys = [key for key in args.refs]
    else:
        keys = [key for key in refs]
        keys.sort()

    for key in keys:
        if key not in refs:
            error('unknown reference {}'.format(key))
            exit(-1)

        r = refs[key]

        if 'authors' in r and 'collaboration' in r:
            print('[{}] : {} ({} collaboration)'.format(key, listify(r['authors']), r['collaboration']))
        elif 'collaboration' in r:
            print('[{}] : ({} collaboration)'.format(key, r['collaboration']))
        elif 'authors' in r:
            print('[{}] : {}'.format(key, listify(r['authors'])))

        print('    {}'.format(r['title']))

        if 'journal' in r:
            print('    {}'.format(listify(r['journal'])))
        if 'eprint' in r:
            print('    {}'.format(listify(r['eprint'])))

        print('')

    exit(0);

if __name__ == '__main__':
    main()
